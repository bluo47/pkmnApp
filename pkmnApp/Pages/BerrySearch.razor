@page "/berrySearch"
@using System.Text.Json
@using System.Text.Json.Serialization
@using PokeApiNet;
@inject IHttpClientFactory ClientFactory

<h1>Berry Search</h1>


<button class="btn btn-primary">Search</button>

<button @onclick="FetchData" class="btn btn-primary">Get Data</button>

@if (todo != null)
{
    <h3>Title: @todo.title</h3>
    <p>Completed: @todo.completed</p>
}

<p>This component demonstrates fetching data from a service.</p>
<button @onclick="accessInfo" class="btn btn-primary">Generate Pokemon Info</button>

@if (pkmn != null)
{
    <h3>@pkmn.Name - #@pkmn.Order</h3>
    List<PokemonType> typeList = pkmn.Types;
    List<PokemonStat> statList = pkmn.Stats;

    foreach (PokemonStat stat in statList)
    {
        <p>@stat</p>
    }
    <p>Its stats are @statList</p>

    foreach (PokemonType type in typeList)
    {
        <p>@type</p>
    }
    <p>Its types are @typeList</p>
}

@*@if (pokeClient != null)
{
    accessInfo();
}*@

@code {
    PokeApiClient pokeClient = new PokeApiClient();
    public Pokemon pkmn;

    public async void accessInfo ()
    {
        pkmn = await pokeClient.GetResourceAsync<Pokemon>("bulbasaur");

    }
    public Todo todo;

    public HttpClient httpClient = new HttpClient();

    public async Task FetchData()
    {
        todo = await httpClient.GetFromJsonAsync<Todo>("https://jsonplaceholder.typicode.com/todos/1");
    }

    public class Todo
    {
        public int userId { get; set; }
        public int id { get; set; }
        public string title { get; set; }
        public bool completed { get; set; } 
    }
}



@*<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }
}
*@